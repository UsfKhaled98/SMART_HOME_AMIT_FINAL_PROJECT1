
EX_S_Pro.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001f8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000024c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000024c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000027c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b52  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000649  00000000  00000000  00000f1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000602  00000000  00000000  00001563  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000230  00000000  00000000  00001b68  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e4  00000000  00000000  00001d98  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000432  00000000  00000000  0000217c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  000025ae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__ctors_end>
   4:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   8:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  10:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  14:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  18:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  1c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  20:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  24:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  28:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  2c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  30:	0c 94 98 00 	jmp	0x130	; 0x130 <__vector_12>
  34:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  38:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  3c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  40:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  44:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  48:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  4c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  50:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  54:	b9 00       	.word	0x00b9	; ????
  56:	be 00       	.word	0x00be	; ????
  58:	c3 00       	.word	0x00c3	; ????
  5a:	c8 00       	.word	0x00c8	; ????
  5c:	cc 00       	.word	0x00cc	; ????
  5e:	cc 00       	.word	0x00cc	; ????
  60:	cc 00       	.word	0x00cc	; ????
  62:	cc 00       	.word	0x00cc	; ????
  64:	cc 00       	.word	0x00cc	; ????
  66:	cc 00       	.word	0x00cc	; ????
  68:	cc 00       	.word	0x00cc	; ????
  6a:	cc 00       	.word	0x00cc	; ????
  6c:	cc 00       	.word	0x00cc	; ????
  6e:	cc 00       	.word	0x00cc	; ????
  70:	cc 00       	.word	0x00cc	; ????
  72:	cc 00       	.word	0x00cc	; ????
  74:	cc 00       	.word	0x00cc	; ????
  76:	cc 00       	.word	0x00cc	; ????
  78:	cc 00       	.word	0x00cc	; ????
  7a:	cc 00       	.word	0x00cc	; ????
  7c:	cc 00       	.word	0x00cc	; ????
  7e:	cc 00       	.word	0x00cc	; ????
  80:	cc 00       	.word	0x00cc	; ????
  82:	cc 00       	.word	0x00cc	; ????
  84:	cc 00       	.word	0x00cc	; ????
  86:	cc 00       	.word	0x00cc	; ????
  88:	cc 00       	.word	0x00cc	; ????
  8a:	cc 00       	.word	0x00cc	; ????
  8c:	cc 00       	.word	0x00cc	; ????
  8e:	cc 00       	.word	0x00cc	; ????
  90:	cc 00       	.word	0x00cc	; ????
  92:	cc 00       	.word	0x00cc	; ????
  94:	b9 00       	.word	0x00b9	; ????
  96:	be 00       	.word	0x00be	; ????
  98:	c3 00       	.word	0x00c3	; ????
  9a:	c8 00       	.word	0x00c8	; ????

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf e5       	ldi	r28, 0x5F	; 95
  a2:	d8 e0       	ldi	r29, 0x08	; 8
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61
  a8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <main>
  ac:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <_exit>

000000b0 <__bad_interrupt>:
  b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b4 <Data_dir_pin_C>:

void resetpinA(int n){
	PORTA &=~(1<<n);
}
void resetpinB(int n){
	PORTB &=~(1<<n);
  b4:	00 97       	sbiw	r24, 0x00	; 0
  b6:	69 f0       	breq	.+26     	; 0xd2 <Data_dir_pin_C+0x1e>
  b8:	01 97       	sbiw	r24, 0x01	; 1
  ba:	b9 f4       	brne	.+46     	; 0xea <Data_dir_pin_C+0x36>
  bc:	24 b3       	in	r18, 0x14	; 20
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <Data_dir_pin_C+0x14>
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	6a 95       	dec	r22
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <Data_dir_pin_C+0x10>
  cc:	82 2b       	or	r24, r18
  ce:	84 bb       	out	0x14, r24	; 20
  d0:	08 95       	ret
  d2:	24 b3       	in	r18, 0x14	; 20
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	02 c0       	rjmp	.+4      	; 0xde <Data_dir_pin_C+0x2a>
  da:	88 0f       	add	r24, r24
  dc:	99 1f       	adc	r25, r25
  de:	6a 95       	dec	r22
  e0:	e2 f7       	brpl	.-8      	; 0xda <Data_dir_pin_C+0x26>
  e2:	80 95       	com	r24
  e4:	82 23       	and	r24, r18
  e6:	84 bb       	out	0x14, r24	; 20
  e8:	08 95       	ret
  ea:	24 b3       	in	r18, 0x14	; 20
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	02 c0       	rjmp	.+4      	; 0xf6 <Data_dir_pin_C+0x42>
  f2:	88 0f       	add	r24, r24
  f4:	99 1f       	adc	r25, r25
  f6:	6a 95       	dec	r22
  f8:	e2 f7       	brpl	.-8      	; 0xf2 <Data_dir_pin_C+0x3e>
  fa:	80 95       	com	r24
  fc:	82 23       	and	r24, r18
  fe:	84 bb       	out	0x14, r24	; 20
 100:	08 95       	ret

00000102 <setpinC>:
 102:	95 b3       	in	r25, 0x15	; 21
 104:	21 e0       	ldi	r18, 0x01	; 1
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <setpinC+0xc>
 10a:	22 0f       	add	r18, r18
 10c:	33 1f       	adc	r19, r19
 10e:	8a 95       	dec	r24
 110:	e2 f7       	brpl	.-8      	; 0x10a <setpinC+0x8>
 112:	29 2b       	or	r18, r25
 114:	25 bb       	out	0x15, r18	; 21
 116:	08 95       	ret

00000118 <resetpinC>:
}
void resetpinC(int n){
	PORTC &=~(1<<n);
 118:	95 b3       	in	r25, 0x15	; 21
 11a:	21 e0       	ldi	r18, 0x01	; 1
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <resetpinC+0xc>
 120:	22 0f       	add	r18, r18
 122:	33 1f       	adc	r19, r19
 124:	8a 95       	dec	r24
 126:	e2 f7       	brpl	.-8      	; 0x120 <resetpinC+0x8>
 128:	20 95       	com	r18
 12a:	29 23       	and	r18, r25
 12c:	25 bb       	out	0x15, r18	; 21
 12e:	08 95       	ret

00000130 <__vector_12>:
#define MISO   6
#define MOSI   5
#define SS     4
#define SCK    7

ISR(SPI_STC_vect){
 130:	1f 92       	push	r1
 132:	0f 92       	push	r0
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	0f 92       	push	r0
 138:	11 24       	eor	r1, r1
 13a:	2f 93       	push	r18
 13c:	3f 93       	push	r19
 13e:	4f 93       	push	r20
 140:	5f 93       	push	r21
 142:	6f 93       	push	r22
 144:	7f 93       	push	r23
 146:	8f 93       	push	r24
 148:	9f 93       	push	r25
 14a:	af 93       	push	r26
 14c:	bf 93       	push	r27
 14e:	ef 93       	push	r30
 150:	ff 93       	push	r31
	char data = (SPDR>>1);
 152:	8f b1       	in	r24, 0x0f	; 15
 154:	e8 2f       	mov	r30, r24
 156:	e6 95       	lsr	r30
	PORTA=(data);
 158:	eb bb       	out	0x1b, r30	; 27
	switch(data){
 15a:	8e 2f       	mov	r24, r30
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	fc 01       	movw	r30, r24
 160:	e1 54       	subi	r30, 0x41	; 65
 162:	f1 09       	sbc	r31, r1
 164:	e4 32       	cpi	r30, 0x24	; 36
 166:	f1 05       	cpc	r31, r1
 168:	b8 f4       	brcc	.+46     	; 0x198 <__vector_12+0x68>
 16a:	e6 5d       	subi	r30, 0xD6	; 214
 16c:	ff 4f       	sbci	r31, 0xFF	; 255
 16e:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__tablejump2__>
		case 'A':
		case 'a':
			setpinC(led0);
 172:	82 e0       	ldi	r24, 0x02	; 2
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	0e 94 81 00 	call	0x102	; 0x102 <setpinC>
		break;
 17a:	0e c0       	rjmp	.+28     	; 0x198 <__vector_12+0x68>
		case 'B':
		case 'b':
			resetpinC(led0);
 17c:	82 e0       	ldi	r24, 0x02	; 2
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	0e 94 8c 00 	call	0x118	; 0x118 <resetpinC>
		break;
 184:	09 c0       	rjmp	.+18     	; 0x198 <__vector_12+0x68>
		case 'C':
		case 'c':
			setpinC(led1);
 186:	87 e0       	ldi	r24, 0x07	; 7
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	0e 94 81 00 	call	0x102	; 0x102 <setpinC>
		break;
 18e:	04 c0       	rjmp	.+8      	; 0x198 <__vector_12+0x68>
		case 'D':
		case 'd':
			resetpinC(led1);
 190:	87 e0       	ldi	r24, 0x07	; 7
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 8c 00 	call	0x118	; 0x118 <resetpinC>
		break;
	}
}
 198:	ff 91       	pop	r31
 19a:	ef 91       	pop	r30
 19c:	bf 91       	pop	r27
 19e:	af 91       	pop	r26
 1a0:	9f 91       	pop	r25
 1a2:	8f 91       	pop	r24
 1a4:	7f 91       	pop	r23
 1a6:	6f 91       	pop	r22
 1a8:	5f 91       	pop	r21
 1aa:	4f 91       	pop	r20
 1ac:	3f 91       	pop	r19
 1ae:	2f 91       	pop	r18
 1b0:	0f 90       	pop	r0
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	0f 90       	pop	r0
 1b6:	1f 90       	pop	r1
 1b8:	18 95       	reti

000001ba <init_spi_slave>:
    {
    }
}

void init_spi_slave(){
	DDRB &=~ (1<<MISO);
 1ba:	be 98       	cbi	0x17, 6	; 23
	SPCR |=(1<<SPE)|(1<<DORD)|(1<<SPIF);/*|(1<<SPR0)|(1<<SPR1);*/
 1bc:	8d b1       	in	r24, 0x0d	; 13
 1be:	80 6e       	ori	r24, 0xE0	; 224
 1c0:	8d b9       	out	0x0d, r24	; 13
 1c2:	08 95       	ret

000001c4 <main>:
		break;
	}
}
int main(void)
{
	DDRA=0xFF;
 1c4:	8f ef       	ldi	r24, 0xFF	; 255
 1c6:	8a bb       	out	0x1a, r24	; 26
	init_spi_slave();
 1c8:	0e 94 dd 00 	call	0x1ba	; 0x1ba <init_spi_slave>
	sei();
 1cc:	78 94       	sei
	Data_dir_pin_C(output,7);
 1ce:	67 e0       	ldi	r22, 0x07	; 7
 1d0:	70 e0       	ldi	r23, 0x00	; 0
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	0e 94 5a 00 	call	0xb4	; 0xb4 <Data_dir_pin_C>
	Data_dir_pin_C(output,2);
 1da:	62 e0       	ldi	r22, 0x02	; 2
 1dc:	70 e0       	ldi	r23, 0x00	; 0
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	0e 94 5a 00 	call	0xb4	; 0xb4 <Data_dir_pin_C>
 1e6:	ff cf       	rjmp	.-2      	; 0x1e6 <main+0x22>

000001e8 <__tablejump2__>:
 1e8:	ee 0f       	add	r30, r30
 1ea:	ff 1f       	adc	r31, r31
 1ec:	05 90       	lpm	r0, Z+
 1ee:	f4 91       	lpm	r31, Z
 1f0:	e0 2d       	mov	r30, r0
 1f2:	09 94       	ijmp

000001f4 <_exit>:
 1f4:	f8 94       	cli

000001f6 <__stop_program>:
 1f6:	ff cf       	rjmp	.-2      	; 0x1f6 <__stop_program>
